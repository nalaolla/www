server:
  address: localhost
  port: 8080

spring:
  profiles: local
  redis:
    host: localhost
    port: 6379

  devtools:
    livereload:
      enabled: true

  social:
    kakao:
      client_id: eafde97f01e399d851d3618663c942a4
      redirect: /social/login/kakao
      url:
        login: https://kauth.kakao.com/oauth/authorize
        token: https://kauth.kakao.com/oauth/token
        profile: https://kapi.kakao.com/v2/user/me

  url:
    base:http://localhost:8080

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: palaoh
    password: 1234
    url: jdbc:mysql://localhost:3306/nalaolla?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC

    # mariaDB
  #    driverClassName: org.mariadb.jdbc.Driver
  #    url: jdbc:mariadb://localhost:3306/DB명?allowMultiQueries=true
  #    username: userid
  #    password: pwd
  #    initial-size: 1
  #    max-active: 3
  #    min-idle: 1
  #    max-idle: 3
  #    max-wait: 30000
  #    test-on-borrow: true
  #    test-on-return: true
  #    test-while-idle: true
  #    time-between-eviction-runs-millis: 30000
  #    validation-query: 'SELECT 1'
  #    validation-query-timeout: 3
  #    validation-interval: 30000
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    generate-ddl: true
    show-sql: true
    hibernate:
      format_sql: true
      ddl-auto: none
    open-in-view: false

  h2:
    console:
      enabled: true

#  spring.jpa.database-platform : JPA 데이터베이스 플랫폼을 지정합니다.
#  spring.jpa.open-in-view : OSIV(Open Session In View)는 웹 요청이 완료될 때까지 동일한 EntityManager를 갖도록 해줍니다.
#  스프링부트에서 OSIV가 기본값으로 true인데, 성능과 확장상 면에서 안좋다고 해서 false로 설정을 껏습니다.
#  spring.jpa.show-sql : 콘솔에 JPA 실행 쿼리를 출력합니다.
#  spring.jpa.hibernate.format_sql : 콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현합니다.
#  spring.jpa.hibernate.ddl_auto : 데이터베이스 초기화 전략을 설정합니다.
#  none : 아무것도 실행하지 않습니다.
#  create : SessionFactory가 시작될 때 기존테이블을 삭제 후 다시 생성합니다.
#  create-drop : create와 같으나 SessionFactory가 종료될 때 drop을 실행합니다.
#  update : 변경된 스키마만 반영합니다.
#  validate : 엔티티와 테이블이 정상적으로 매핑되었는지만 확인합니다.


logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
#  logging.level.org.hibernate.type.descriptor.sql : SQL에서 물음표로 표기된 부분( bind parameter )을 로그로 출력해서 확인할 수 있습니다.

